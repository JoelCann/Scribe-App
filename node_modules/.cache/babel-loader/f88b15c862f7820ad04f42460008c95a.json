{"ast":null,"code":"var _jsxFileName = \"/Users/administrator/React_Projects/Git/Scribe-App/src/components/App.jsx\";\nimport React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nfunction App() {\n  //Decalaration of states.\n  const [noteArray, setNoteArray] = useState([]);\n\n  //Function to be triggered by the Add button in the 'CreateArea' component.\n  //This function stores each user input(the objects created from CreateArea component)\n  //in an array\n  function onAdd(noteItems) {\n    setNoteArray(prevNote => {\n      return [...prevNote, noteItems];\n    });\n  }\n\n  //This function is called when the delete button on a note is clicked.\n  //It deletes that particular entry from from the array, hence the screen.\n  function onDelete(targetId) {\n    setNoteArray(prevNote => {\n      return prevNote.filter((items, index) => {\n        return index !== targetId;\n      });\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CreateArea, {\n    onAddbtnClick: onAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), noteArray.map((card, index) => {\n    return /*#__PURE__*/React.createElement(Note, {\n      key: index,\n      targetId: index,\n      heading: card.title,\n      content: card.textArea,\n      delete: onDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    });\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n}\nexport default App;","map":{"version":3,"names":["React","useState","Header","Footer","Note","CreateArea","App","noteArray","setNoteArray","onAdd","noteItems","prevNote","onDelete","targetId","filter","items","index","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onAddbtnClick","map","card","key","heading","title","content","textArea","delete"],"sources":["/Users/administrator/React_Projects/Git/Scribe-App/src/components/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\nfunction App() {\n  //Decalaration of states.\n  const [noteArray, setNoteArray] = useState([]);\n\n  //Function to be triggered by the Add button in the 'CreateArea' component.\n  //This function stores each user input(the objects created from CreateArea component)\n  //in an array\n  function onAdd(noteItems) {\n    setNoteArray((prevNote) => {\n      return [...prevNote, noteItems]\n    })\n  }\n\n  //This function is called when the delete button on a note is clicked.\n  //It deletes that particular entry from from the array, hence the screen.\n  function onDelete(targetId) {\n    setNoteArray((prevNote) => {\n      return prevNote.filter((items, index) => {\n        return index !== targetId;\n      })\n    })\n\n  }\n\n\n\n\n  return (\n    <div>\n      <Header />\n      <CreateArea\n        onAddbtnClick={onAdd}\n      />\n\n      {/*Javascript statement below loops through the created array\n      and creates a note card with details/values from each array entry*/}\n      {noteArray.map((card, index) => {\n        return (\n          <Note\n            key={index}\n            targetId={index}\n            heading={card.title}\n            content={card.textArea}\n            delete={onDelete}\n          />\n        )\n      })}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,UAAU,MAAM,cAAc;AAErC,SAASC,GAAGA,CAAA,EAAG;EACb;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA;EACA;EACA,SAASQ,KAAKA,CAACC,SAAS,EAAE;IACxBF,YAAY,CAAEG,QAAQ,IAAK;MACzB,OAAO,CAAC,GAAGA,QAAQ,EAAED,SAAS,CAAC;IACjC,CAAC,CAAC;EACJ;;EAEA;EACA;EACA,SAASE,QAAQA,CAACC,QAAQ,EAAE;IAC1BL,YAAY,CAAEG,QAAQ,IAAK;MACzB,OAAOA,QAAQ,CAACG,MAAM,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;QACvC,OAAOA,KAAK,KAAKH,QAAQ;MAC3B,CAAC,CAAC;IACJ,CAAC,CAAC;EAEJ;EAKA,oBACEb,KAAA,CAAAiB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEvB,KAAA,CAAAiB,aAAA,CAACf,MAAM;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACVvB,KAAA,CAAAiB,aAAA,CAACZ,UAAU;IACTmB,aAAa,EAAEf,KAAM;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACtB,CAAC,EAIDhB,SAAS,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEV,KAAK,KAAK;IAC9B,oBACEhB,KAAA,CAAAiB,aAAA,CAACb,IAAI;MACHuB,GAAG,EAAEX,KAAM;MACXH,QAAQ,EAAEG,KAAM;MAChBY,OAAO,EAAEF,IAAI,CAACG,KAAM;MACpBC,OAAO,EAAEJ,IAAI,CAACK,QAAS;MACvBC,MAAM,EAAEpB,QAAS;MAAAM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAClB,CAAC;EAEN,CAAC,CAAC,eACFvB,KAAA,CAAAiB,aAAA,CAACd,MAAM;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACN,CAAC;AAEV;AAEA,eAAejB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}