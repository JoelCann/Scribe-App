{"ast":null,"code":"var _jsxFileName = \"/Users/administrator/React_Projects/Git/Scribe-App/src/components/CreateArea.jsx\";\nimport React, { useState } from \"react\";\nimport AddRoundedIcon from '@mui/icons-material/AddRounded';\nimport Fab from '@mui/material/Fab';\nimport Zoom from '@mui/material/Zoom';\nimport Alert from '@mui/material/Alert';\nfunction CreateArea(props) {\n  //Declaration of state and state functions\n  const [noteClicked, setNoteClicked] = useState(false);\n  const [noteItems, setNoteItems] = useState({\n    title: \"\",\n    textArea: \"\"\n  });\n  function handleTextChange(e) {\n    //Destructuring of 'event.target' object, to enable easy\n    //access to contained values in setState functions\n    //(ie. Avoiding synthetic ... issues).\n    const {\n      name: inputName,\n      value: newValue\n    } = e.target;\n\n    //  Storing user input as objects in our state variable (noteItems).\n\n    if (inputName === \"title\") {\n      setNoteItems(prevValue => {\n        if (prevValue.title === \"\") {\n          return /*#__PURE__*/React.createElement(Alert, {\n            severity: \"error\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 18\n            }\n          }, \"Opps! Seems you may have forgotten about your Note Title.\");\n        } else return {\n          title: newValue,\n          textArea: prevValue.textArea\n        };\n      });\n    } else if (inputName === \"content\") {\n      setNoteItems(prevValue => {\n        return {\n          title: prevValue.title,\n          textArea: newValue\n        };\n      });\n    }\n  }\n  function handleTextAreaClick() {\n    setNoteClicked(true);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"create-note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, noteClicked && /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      fontWeight: \"300\"\n    },\n    name: \"title\",\n    value: noteItems.title,\n    placeholder: \"Title\",\n    onChange: handleTextChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"content\",\n    value: noteItems.textArea,\n    placeholder: \"Take a note...\",\n    rows: noteClicked ? \"3\" : \"1\",\n    onClick: handleTextAreaClick,\n    onChange: handleTextChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Zoom, {\n    in: noteClicked ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    onClick: e => {\n      props.onAddbtnClick(noteItems);\n      e.preventDefault();\n      setNoteItems(() => {\n        return {\n          title: \"\",\n          textArea: \"\"\n        };\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AddRoundedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })))));\n}\nexport default CreateArea;\n\n//This Component returns the input fields/form where the data entry is made.","map":{"version":3,"names":["React","useState","AddRoundedIcon","Fab","Zoom","Alert","CreateArea","props","noteClicked","setNoteClicked","noteItems","setNoteItems","title","textArea","handleTextChange","e","name","inputName","value","newValue","target","prevValue","createElement","severity","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","handleTextAreaClick","className","style","fontWeight","placeholder","onChange","rows","onClick","in","onAddbtnClick","preventDefault"],"sources":["/Users/administrator/React_Projects/Git/Scribe-App/src/components/CreateArea.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport AddRoundedIcon from '@mui/icons-material/AddRounded';\nimport Fab from '@mui/material/Fab';\nimport Zoom from '@mui/material/Zoom';\nimport Alert from '@mui/material/Alert';\n\n\n\nfunction CreateArea(props) {\n\n  //Declaration of state and state functions\n  const [noteClicked, setNoteClicked] = useState(false);\n  const [noteItems, setNoteItems] = useState({\n    title: \"\",\n    textArea: \"\"\n  });\n\n  function handleTextChange(e) {\n\n    //Destructuring of 'event.target' object, to enable easy\n    //access to contained values in setState functions\n    //(ie. Avoiding synthetic ... issues).\n    const { name: inputName, value: newValue } = e.target;\n\n    //  Storing user input as objects in our state variable (noteItems).\n\n\n    if (inputName === \"title\") {\n      setNoteItems((prevValue) => {\n        if (prevValue.title === \"\") {\n          return <Alert severity=\"error\">Opps! Seems you may have forgotten about your Note Title.</Alert>\n        } else\n          return ({\n            title: newValue,\n            textArea: prevValue.textArea\n          })\n      });\n    }\n    else if (inputName === \"content\") {\n      setNoteItems((prevValue) => {\n        return ({\n          title: prevValue.title,\n          textArea: newValue\n        })\n      });\n    }\n  }\n\n  function handleTextAreaClick() {\n    setNoteClicked(true);\n  }\n\n\n  return (\n    <div>\n      <form className=\"create-note\">\n        {noteClicked && <input\n          style={{ fontWeight: \"300\" }}\n          name=\"title\"\n          value={noteItems.title}\n          placeholder=\"Title\"\n          onChange={handleTextChange}\n        />}\n\n        <textarea\n          name=\"content\"\n          value={noteItems.textArea}\n          placeholder=\"Take a note...\"\n          rows={noteClicked ? \"3\" : \"1\"}\n          onClick={handleTextAreaClick}\n          onChange={handleTextChange}\n        />\n        <Zoom in={noteClicked ? true : false} >\n          <Fab onClick={(e) => {\n            props.onAddbtnClick(noteItems);\n            e.preventDefault();\n            setNoteItems(() => {\n              return {\n                title: \"\",\n                textArea: \"\"\n              }\n            });\n          }}>\n            <AddRoundedIcon />\n          </Fab>\n        </Zoom>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n\n\n//This Component returns the input fields/form where the data entry is made. "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}